name: Release

on:
    workflow_dispatch:
        inputs:
            version_type:
                description: 'Version bump type'
                required: true
                default: 'patch'
                type: choice
                options:
                    - patch
                    - minor
                    - major

permissions:
    contents: write

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0
                    token: ${{ secrets.GITHUB_TOKEN }}

            -   name: Configure Git
                run: |
                    git config user.name "github-actions[bot]"
                    git config user.email "github-actions[bot]@users.noreply.github.com"

            -   name: Set up JDK 21
                uses: actions/setup-java@v4
                with:
                    java-version: '21'
                    distribution: 'temurin'
                    cache: maven
                    server-id: central
                    server-username: MAVEN_USERNAME
                    server-password: MAVEN_CENTRAL_TOKEN
                    gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
                    gpg-passphrase: MAVEN_GPG_PASSPHRASE

            -   name: Get current version
                id: current_version
                run: |
                    VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
                    echo "version=$VERSION" >> $GITHUB_OUTPUT

            -   name: Calculate new version
                id: new_version
                run: |
                    CURRENT="${{ steps.current_version.outputs.version }}"
                    IFS='.' read -ra VERSION_PARTS <<< "$CURRENT"
                    MAJOR=${VERSION_PARTS[0]}
                    MINOR=${VERSION_PARTS[1]}
                    PATCH=${VERSION_PARTS[2]}
                    
                    case "${{ github.event.inputs.version_type }}" in
                      major)
                        MAJOR=$((MAJOR + 1))
                        MINOR=0
                        PATCH=0
                        ;;
                      minor)
                        MINOR=$((MINOR + 1))
                        PATCH=0
                        ;;
                      patch)
                        PATCH=$((PATCH + 1))
                        ;;
                    esac
                    
                    NEW_VERSION="$MAJOR.$MINOR.$PATCH"
                    echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

            -   name: Update version in pom.xml
                run: mvn versions:set -DnewVersion=${{ steps.new_version.outputs.version }}

            -   name: Commit version bump
                run: |
                    git add pom.xml
                    git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }}"
                    git tag -a "v${{ steps.new_version.outputs.version }}" -m "Release v${{ steps.new_version.outputs.version }}"

            -   name: Run tests
                run: mvn clean test

            -   name: Deploy to Maven Central
                run: mvn clean deploy -P deployment
                env:
                    MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
                    MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
                    MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

            -   name: Push changes
                run: |
                    git push origin main
                    git push origin "v${{ steps.new_version.outputs.version }}"

            -   name: Create GitHub Release
                uses: softprops/action-gh-release@v1
                with:
                    tag_name: v${{ steps.new_version.outputs.version }}
                    name: Release v${{ steps.new_version.outputs.version }}
                    generate_release_notes: true
                    draft: false
                    prerelease: false